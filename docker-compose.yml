services:
  postgres:
    image: postgres:15-alpine
    container_name: kbrain-postgres
    environment:
      - POSTGRES_USER=kbrain
      - POSTGRES_PASSWORD=kbrain
      - POSTGRES_DB=kbrain
    ports:
      - "5438:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kbrain"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    build:
      context: ./kbrain_backend
      dockerfile: Dockerfile
    container_name: kbrain-backend
    ports:
      - "6969:8000"
    volumes:
      - ./kbrain_backend/storage_data:/app/storage_data
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql+asyncpg://kbrain:kbrain@postgres:5432/kbrain
      - STORAGE_BACKEND=local
      - STORAGE_ROOT=storage_data
      - CORS_ORIGINS=["http://localhost:80", "http://localhost"]
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./kbrain_frontend
      dockerfile: Dockerfile
    container_name: kbrain-frontend
    expose:
      - "5173"
#    volumes:
#      - ./kbrain_frontend:/app
#      - /app/node_modules
    environment:
      - VITE_API_URL=/api
    depends_on:
      - backend
    restart: unless-stopped

  nginx:
    build:
      context: ./kbrain-nginx
      dockerfile: Dockerfile
    container_name: kbrain-nginx
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  default:
    name: kbrain-network
