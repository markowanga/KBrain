"""Initial migration with scopes, documents, and processing_queue tables

Revision ID: d9c4d8ddc760
Revises: 
Create Date: 2025-10-24 21:37:25.241209

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd9c4d8ddc760'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('scopes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('allowed_extensions', sa.ARRAY(sa.String()), nullable=False),
    sa.Column('storage_backend', sa.String(length=50), nullable=False),
    sa.Column('storage_config', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_scopes_is_active'), 'scopes', ['is_active'], unique=False)
    op.create_index(op.f('ix_scopes_name'), 'scopes', ['name'], unique=True)
    op.create_table('documents',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('scope_id', sa.UUID(), nullable=False),
    sa.Column('filename', sa.String(length=500), nullable=False),
    sa.Column('original_name', sa.String(length=500), nullable=False),
    sa.Column('file_size', sa.BigInteger(), nullable=False),
    sa.Column('mime_type', sa.String(length=255), nullable=True),
    sa.Column('file_extension', sa.String(length=50), nullable=False),
    sa.Column('storage_path', sa.Text(), nullable=False),
    sa.Column('storage_backend', sa.String(length=50), nullable=False),
    sa.Column('checksum_md5', sa.String(length=32), nullable=True),
    sa.Column('checksum_sha256', sa.String(length=64), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('upload_date', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('processing_started', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('processed_at', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('doc_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['scope_id'], ['scopes.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_documents_filename'), 'documents', ['filename'], unique=False)
    op.create_index(op.f('ix_documents_original_name'), 'documents', ['original_name'], unique=False)
    op.create_index(op.f('ix_documents_scope_id'), 'documents', ['scope_id'], unique=False)
    op.create_index(op.f('ix_documents_status'), 'documents', ['status'], unique=False)
    op.create_index(op.f('ix_documents_upload_date'), 'documents', ['upload_date'], unique=False)
    op.create_table('processing_queue',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('document_id', sa.UUID(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('max_retries', sa.Integer(), nullable=False),
    sa.Column('scheduled_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('started_at', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('completed_at', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('worker_id', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_processing_queue_document_id'), 'processing_queue', ['document_id'], unique=False)
    op.create_index(op.f('ix_processing_queue_priority'), 'processing_queue', ['priority'], unique=False)
    op.create_index(op.f('ix_processing_queue_scheduled_at'), 'processing_queue', ['scheduled_at'], unique=False)
    op.create_index(op.f('ix_processing_queue_status'), 'processing_queue', ['status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_processing_queue_status'), table_name='processing_queue')
    op.drop_index(op.f('ix_processing_queue_scheduled_at'), table_name='processing_queue')
    op.drop_index(op.f('ix_processing_queue_priority'), table_name='processing_queue')
    op.drop_index(op.f('ix_processing_queue_document_id'), table_name='processing_queue')
    op.drop_table('processing_queue')
    op.drop_index(op.f('ix_documents_upload_date'), table_name='documents')
    op.drop_index(op.f('ix_documents_status'), table_name='documents')
    op.drop_index(op.f('ix_documents_scope_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_original_name'), table_name='documents')
    op.drop_index(op.f('ix_documents_filename'), table_name='documents')
    op.drop_table('documents')
    op.drop_index(op.f('ix_scopes_name'), table_name='scopes')
    op.drop_index(op.f('ix_scopes_is_active'), table_name='scopes')
    op.drop_table('scopes')
    # ### end Alembic commands ###
